/* border */

@use '../config/variables' as v;

/* border-color */

@each $color, $shades in v.$colors-ext {
  @each $shade, $value in $shades {
    .b-#{$color}-#{$shade} {
      border-color: #{$value};
    }

    .b-hover-#{$color}-#{$shade}:hover {
      border-color: #{$value};
    }
  }
}

@each $name, $value in v.$colors-base {
  .b-#{$name} {
    border-color: #{$value};
  }

  .b-hover-#{$name}:hover {
    border-color: #{$value};
  }
}

/* border-radius */

$radius-sizes: (
  'none': 0px,
  'md': 0.375rem,
  'lg': 0.5rem,
  'xl': 0.75rem,
  '2xl': 1rem,
  '3xl': 1.5rem,
  'full': 9999px
);

$directions-rounded: (
  'tl': 'top-left',
  'tr': 'top-right',
  'bl': 'bottom-left',
  'br': 'bottom-right'
);

@each $name, $value in $radius-sizes {
  .rounded-#{$name} {
    border-radius: #{$value};
  }
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

@each $name, $value in $radius-sizes {
  .rounded-t-#{$name} {
    border-top-left-radius: #{$value};
    border-top-right-radius: #{$value};
  }
}

.rounded-b {
  border-bottom-left-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

@each $name, $value in $radius-sizes {
  .rounded-b-#{$name} {
    border-bottom-left-radius: #{$value};
    border-bottom-right-radius: #{$value};
  }
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

@each $name, $value in $radius-sizes {
  .rounded-l-#{$name} {
    border-top-left-radius: #{$value};
    border-bottom-left-radius: #{$value};
  }
}

.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

@each $name, $value in $radius-sizes {
  .rounded-r-#{$name} {
    border-top-right-radius: #{$value};
    border-bottom-right-radius: #{$value};
  }
}

.rounded-tl {
  border-top-left-radius: 0.25rem;
}

.rounded-tr {
  border-top-right-radius: 0.25rem;
}

.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}

.rounded-br {
  border-bottom-right-radius: 0.25rem;
}

@each $nameRounded, $fullName in $directions-rounded {
  .rounded-#{$nameRounded} {
    @each $name, $value in $radius-sizes {
      &-#{$name} {
        border-#{$fullName}-radius: #{$value};
      }
    }
  }
}

/* border-styles */

$border-styles: (
  'dashed': dashed,
  'dotted': dotted,
  'double': double,
  'groove': groove,
  'hidden': hidden,
  'inherit': inherit,
  'initial': initial,
  'inset': inset,
  'none': none,
  'outset': outset,
  'ridge': ridge,
  'unset': unset
);

@each $name, $value in $border-styles {
  .b-#{$name} {
    border-style: #{$value} !important;
  }
}

/* border-width */

$border-sizes: (
  '0': 0,
  '1': 1px,
  '2': 2px,
  '3': 3px,
  '4': 4px,
  '5': 5px
);

$border-directions: (
  't': top,
  'b': bottom,
  'r': right,
  'l': left
);

@each $name, $value in $border-sizes {
  .b-#{$name} {
    border-width: #{$value};
    border-style: solid;
  }
}

@each $name, $value in $border-directions {
  .b#{$name} {
    @each $size, $prop in $border-sizes {
      &-#{$size} {
        border-#{$value}-width: #{$prop};
        border-#{$value}-style: solid;
      }
    }
  }
}

@each $name, $value in $border-sizes {
  .by-#{$name} {
    border-top-width: #{$value};
    border-bottom-width: #{$value};
    border-top-style: solid;
    border-bottom-style: solid;
  }

  .bx-#{$name} {
    border-left-width: #{$value};
    border-right-width: #{$value};
    border-left-style: solid;
    border-right-style: solid;
  }
}

/* outline-color */

@each $color, $shades in v.$colors-ext {
  @each $shade, $value in $shades {
    .outline-#{$color}-#{$shade} {
      outline-color: #{$value};
    }
  }
}

@each $name, $value in v.$colors-base {
  .outline-#{$name} {
    outline-color: #{$value};
  }
}

/* outline-offset */

$outline-offset: (
  '0': 0px,
  '1': 1px,
  '2': 2px,
  '4': 4px,
  '8': 8px
);

@each $name, $value in $outline-offset {
  .outline-offset-#{$name} {
    outline-offset: #{$value};
  }
}

$outline-styles: (
  'dashed': dashed,
  'dotted': dotted,
  'double': double,
  'hidden': hidden
);

@each $name, $value in $outline-styles {
  .outline-#{$name} {
    outline-style: #{$value};
  }
}

/* outline-width */

$outline-width: (
  '0': 0px,
  '1': 1px,
  '2': 2px,
  '4': 4px,
  '8': 8px
);

@each $name, $value in $outline-width {
  .outline-#{$name} {
    outline-width: #{$value};
  }
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}
