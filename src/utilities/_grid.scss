$grid-columns: 12 !default;

$grid: (
  cols: grid-template-columns,
  rows: grid-template-rows,
);

// grid-auto-flow
$grid-auto-flow: (
  row: row,
  column: column,
  row-dense: row dense,
  column-dense: column dense,
);

// grid-auto-columns
$grid-auto-cols: (
  auto-cols-auto: auto,
  auto-cols-min: min-content,
  auto-cols-max: max-content,
  auto-cols-fr: minmax(0, 1fr),
);

// grid-auto-rows
$grid-auto-rows: (
  auto-rows-auto: auto,
  auto-rows-min: min-content,
  auto-rows-max: max-content,
  auto-rows-fr: minmax(0, 1fr),
);

$grid-span: (
  span: grid-column,
  row-span: grid-row,
);

@mixin gen-grid-col($templated) {
  @for $i from 1 through $grid-columns {
    &-#{$i} {
      #{$templated}: repeat($i, minmax(0, 1fr));
    }
  }
}

@mixin gen-grid-span {
  @each $name, $value in $grid-span {
    &-#{$name} {
      @for $i from 1 through $grid-columns {
        &-#{$i} {
          #{$value}: span $i;
        }
      }

      @include mediaquerys {
        @for $i from 1 through $grid-columns {
          &-#{$i} {
            #{$value}: span $i;
          }
        }
      }
    }
  }
}

.grid {
  display: grid;

  &-cols {
    @include gen-grid-col(grid-template-columns);
  }

  &-rows {
    @include gen-grid-col(grid-template-rows);
  }

  @include mediaquerys {
    &-cols {
      @include gen-grid-col(grid-template-columns);
    }

    &-rows {
      @include gen-grid-col(grid-template-rows);
    }
  }

  @include gen-grid-span();
}
